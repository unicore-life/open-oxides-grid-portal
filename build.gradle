buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE',
                'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
    }
}

plugins {
    id 'application'
    id 'java'
    id 'groovy'
    id 'checkstyle'
    id 'com.moowork.grunt' version '0.11'
}
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    compile 'org.springframework.boot:spring-boot-starter',
            'org.springframework.boot:spring-boot-starter-undertow',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-thymeleaf',
            'org.springframework.boot:spring-boot-starter-security',
//            'org.springframework.boot:spring-boot-starter-actuator',

//            'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.0.BETA01',
            'org.apache.commons:commons-lang3:3.4',
            'org.springframework:spring-context-support:4.2.3.RELEASE',
            'net.sf.ehcache:ehcache:2.10.0',

            'eu.unicore.workflow:common:2.8.1',
//            'eu.unicore:uas-client:1.9.2'
            files('securityLibrary-4.1.5.20151218.jar')

    compile('eu.unicore:uas-client:1.9.2') {
        exclude group: 'eu.unicore.security', module: 'securityLibrary'
    }

    testCompile 'org.springframework.boot:spring-boot-starter-test',
            'org.spockframework:spock-spring:1.0-groovy-2.4',
            'org.apache.httpcomponents:httpclient'
}

// FIXME: workaround until security library is fixed
distZip { excludes = ["**/securityLibrary-4.1.5.jar"] }

configurations {
    all*.exclude module: 'javax.servlet'
}

repositories {
    mavenCentral()
    maven { url 'http://unicore-dev.zam.kfa-juelich.de/maven' }
}

group = 'pl.plgrid.unicore.portal'
version = '1.1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName = 'pl.edu.icm.oxides.OxidesGridPortal'
run {
    jvmArgs = ['-Dspring.profiles.active=local']
}

applicationDistribution.from('src/main/resources') {
    into 'config'
    include 'application-prod.yml'
    include 'grid-prod.properties'
    rename '(.+)-prod.(.+)', '$1.$2'
}

node {
    version = '5.1.0'
    download = true
}

grunt {
    workDir = file("${project.projectDir}")
    colors = false
    bufferOutput = true
}

project.tasks.grunt_install.dependsOn npmInstall
project.tasks.grunt_build.dependsOn grunt_install
project.tasks.processResources.dependsOn grunt_build

project.tasks.grunt_check.dependsOn grunt_install
project.tasks.check.dependsOn grunt_check

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
